@model TodoApp.ViewModels.TodosViewModel

<div class="sair">
    <span>Olá, Abel</span> <button><i class="fas fa-power-off"></i></button>
</div>
<div class="container">
    <div class="quadro">
        <div class="quadro-header">
            <h3>Pendente</h3>
        </div>
        <div id="0" class="quadro-body">
            @{
                foreach (var item in Model.Pendentes)
                {
                    <div id="@item.Id" class="item" draggable="true">
                        @item.Nome
                        <div class="item-footer">
                            <i class="fas fa-clock"></i>
                            <span> @item.Vencimento.ToString()</span>
                        </div>
                    </div>
                }
            }
            <button class="novo-item" data-toggle="modal" data-target="#exampleModal"><i class="fas fa-plus"></i> Novo card</button>
        </div>
    </div>
    <div class="quadro">
        <div class="quadro-header">
            <h3>Em andamento</h3>
        </div>
        <div id="1" class="quadro-body">
            @{
                foreach (var item in Model.EmAndamento)
                {
                    <div id="@item.Id" class="item" draggable="true">
                        @item.Nome
                        <div class="item-footer">
                            <i class="fas fa-clock"></i>
                            <span> @item.Vencimento.ToString()</span>
                        </div>
                    </div>
                }
            }
            <button class="novo-item" data-toggle="modal" data-target="#exampleModal"><i class="fas fa-plus"></i> Novo card</button>
        </div>
    </div>
    <div class="quadro">
        <div class="quadro-header">
            <h3>Finalizado</h3>
        </div>
        <div id="2" class="quadro-body">
            @{
                foreach (var item in Model.Finalizado)
                {
                    <div id="@item.Id" class="item" draggable="true">
                        @item.Nome
                        <div class="item-footer">
                            <i class="fas fa-clock"></i>
                            <span> @item.Vencimento.ToString()</span>
                        </div>
                    </div>
                }
            }
            <button class="novo-item" data-toggle="modal" data-target="#exampleModal"><i class="fas fa-plus"></i> Novo card</button>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <form method="post" action="@Url.Action("incluir", "todo")">
                <div class="modal-header">
                    <h3 class="modal-title" id="exampleModalLabel">Novo card</h3>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="nome" class="col-form-label">Título</label>
                        <input type="text" class="form-control" id="nome" name="nome" placeholder="Correção featura #37..." />
                    </div>
                    <div class="form-group">
                        <label for="vencimento" class="col-form-label">Vencimento</label>
                        <input type="datetime" class="form-control" id="vencimento" name="vencimento" placeholder="31/07/2021 03:23"/>
                    </div>
                    <div class="form-group">
                        <label for="vencimento" class="col-form-label">Status</label>
                        <div class="dropdown">
                            <select name="status">
                                <option value="0" selected>Pendente</option>
                                <option value="1">Em andamento</option>
                                <option value="2">Finalizado</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="descricao" class="col-form-label">Descrição</label>
                        <textarea class="form-control" id="descricao" name="descricao" placeholder="A feature 27 está apresentando erros em uma determinada ação do usuário..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                    <button type="submit" class="btn btn-primary">Salvar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .container {
        display: flex;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .quadro-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 20%;
        padding-right: 10px;
        padding: 10px 15px 10px 15px;
    }

    .quadro-body {
    }

    .quadro {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 30rem;
        height: fit-content;
        background-color: #ebecf0;
        border-radius: 5px;
    }

    .item {
        width: stretch;
        min-height: 50px;
        height: auto;
        margin: 0px 10px 10px 10px;
        background-color: white;
        border-radius: 3px;
        box-shadow: 0 1px 0 rgb(9 30 66 / 25%);
        padding: 5px;
    }

    .item-footer {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        margin: 15px 5px 5px 0px;
        color: grey;
    }

    .item-footer > span {
        margin-left: 5px;
    }

    .espacador {
        width: stretch;
        min-height: 50px;
        height: auto;
        margin: 0px 10px 10px 10px;
        padding: 5px;
        background-color: transparent;
        border: dotted;
        border-radius: 3px;
        border-width: 1px;
        border-color: grey;
    }

    .novo-item {
        border: none;
        padding: 10px;
        margin: 5px;
    }

    h3 {
        margin: unset;
    }

    .sair {
        display: block;
        position: absolute;
        top: 3rem;
        right: 3rem;
    }

    .sair > button {
        color: red;
        border: none;
        border-radius: 3px;
        box-shadow: 0 1px 0 rgb(9 30 66 / 25%);
    }

    .sair > span {
        color: white;
        font-weight: bold;
        margin: 10px;
    }
</style>

@section scripts {
    <script type="text/javascript">
        $(function () {
            draggableInit();
        });

        function draggableInit() {
            let elementoDestino;

            $('[draggable=true]').bind('dragstart', (event) => {
                event.originalEvent.dataTransfer.setData("text/plain", event.target.getAttribute('id'));
            });

            $('.quadro-body').bind('dragover', (event) => {
                event.preventDefault();

                const elemento = document.elementFromPoint(event.clientX, event.clientY);
                if (!elemento)
                    return;

                if (!elemento.classList.contains('item'))
                    return;

                // remove o espaçador antes de colocar um novo
                $('#espacador').remove();

                const newEl = document.createElement('div');
                newEl.className = 'espacador';
                newEl.style.height = `${elemento.clientHeight}px`;
                newEl.id = 'espacador';

                elemento.parentNode.insertBefore(newEl, elemento);

                elementoDestino = elemento;
            });

            $('.quadro-body').bind('drop', (event) => {
                $('#espacador').remove();

                const painelEl = event.target;
                console.log(painelEl);

                let status;

                if (event.target.getAttribute('class')?.endsWith('quadro-body'))
                    status = event.target.getAttribute('id');
                else
                    status = elementoDestino.parentNode.getAttribute('id');
                
                const elementoId = event.originalEvent.dataTransfer.getData("text/plain");

                $.post(
                    '@Url.Action("alterarstatus", "todo")',
                    { todoId: elementoId, status: status },
                    (data, status, any) => {
                        if (status !== 'success')
                            return;

                        const elemento = document.getElementById(elementoId);
                        if (!elemento)
                            return;

                        if (event.target.getAttribute('class')?.endsWith('quadro-body'))
                            event.target.prepend(elemento);
                        else
                            elementoDestino.parentNode.insertBefore(elemento, elementoDestino);
                    }
                );

                event.preventDefault();
            });

            $('.quadro-body').bind('dragend', (event) => {
                $('#espacador').remove();
            });
        }
    </script>
}